---
version: '3'

services:

  ibmmq:
    image: ibmcom/mq # https://hub.docker.com/r/ibmcom/mq/
    hostname: ibmmq
    container_name: ibmmq
    networks:
      - mesh
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM1
      MQ_ADMIN_PASSWORD: passw0rd
      MQ_APP_PASSWORD: passw0rd
    ports:
      - '1414:1414'
      - '9443:9443'

  activemq:
    image: rmohr/activemq:5.15.5
    container_name: activemq
    hostname: "activemq"
    environment:
      - "TZ=Europe/Berlin"
    networks:
      - mesh
    volumes:
      - "./activemq/activemq.xml:/conf/activemq.xml"
    ports:
      - "61616:61616" # broker (admin:adminactivemq)(amq:amq)
      - "8161:8161"   # web    http://boot2docker:8161/admin (admin:admin)

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    container_name: rabbitmq
    networks:
      - mesh
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672
    labels:
      NAME: "rabbitmq"
    volumes:
      - "./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins"

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.1
    container_name: zookeeper
    networks:
      - mesh
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.2.1
    container_name: kafka
    networks:
      - mesh
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    volumes:
       - ./scripts:/scripts

  schema-registry:
    image: confluentinc/cp-schema-registry:5.2.1
    container_name: schema-registry
    networks:
      - mesh
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 18081:18081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:18081"

  kafka-connect-cp:
    build: connect/
    container_name: kafka-connect-cp
    networks:
      - mesh
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - 18083:18083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_REST_PORT: 18083
      CONNECT_GROUP_ID: kafka-connect-cp
      CONNECT_CONFIG_STORAGE_TOPIC: docker-kafka-connect-cp-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-kafka-connect-cp-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-kafka-connect-cp-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:18081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:18081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect-cp"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java'
    volumes:
     - ./scripts:/scripts
     - ./ibmmq/com.ibm.mq.allclient.jar:/usr/share/confluent-hub-components/confluentinc-kafka-connect-ibmmq/lib/com.ibm.mq.allclient.jar
     - ./ibmmq/jms.jar:/usr/share/confluent-hub-components/confluentinc-kafka-connect-ibmmq/lib/jms.jar


# Other systems
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.0
    container_name: elasticsearch
    ports:
      - 9200:9200
    environment:
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    volumes:
     - $PWD/scripts:/scripts


networks:
  mesh:
    driver: bridge
    #external: true
